"{{{ 通用设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = "," "定义<leader>键
filetype plugin on  "加载对应文件类型插件
filetype indent on
filetype plugin indent on
set nocompatible    "设置不兼容原始vi模式
filetype on     "设置开启文件类型侦测
set noeb        "关闭错误提示
syntax enable       "开启语法高亮功能
syntax on       "自动语法高亮
set t_Co=256        "开启256色支持
set showcmd     "select模式下显示选中的行数
set ruler       "总是显示光标的位置
set laststatus=2    "总是显示状态栏
set number      "开启行号显示
set relativenumber "开启相对行号
set ignorecase   "忽略大小写"
set whichwrap+=<,>,h,l  "设置光标键跨行
set virtualedit=block,onemore   "允许光标出现在最后一个字符的后面
set guifont=DroidSansMono_Nerd_Font:h11   "设置字体
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif "保留上次打开文件的位置"
hi MatchParen ctermbg=DarkRed guibg=lightblue
"set list
"set listchars=tab:▸\ ,trail:▫
set mouse=a
inoremap <leader>a :set mouse=a<cr>
nnoremap <leader>a :set mouse=a<cr>
inoremap <leader>v :set mouse=v<cr>
nnoremap <leader>v :set mouse=v<cr>
set backspace=indent,eol,start
let loaded_matchparen=1 "关闭括号自动高亮
nnoremap <space>v <c-v>
"}}}


"{{{Tab management
" Create a new tab with tu
map te :tabe<CR>
" Move around tabs with tn and ti
map tn :-tabnext<CR>
map tp :+tabnext<CR>
" Move the tabs with tmn and tmi
map tmn :-tabmove<CR>
map tmi :+tabmove<CR>
"Close the tab
map tc :+tabc<CR>   "close current tab
map to :+tabo<CR>   "close all other tab
map ts :+tabs<CR>   "close all open tab
"}}}

"{{{优化设置
"设置y从vim复制到剪切板
set clipboard+=unnamed 
"映射 esc 键为 jj
imap jj <Esc>
"快速打开vim配置文件：_vimrc
nnoremap <leader>e :e $HOME/.config/nvim/init.vim<cr>
"刷新配置
nnoremap <leader>r :source $MYVIMRC<cr>
" 插入模式、正常模式按 Ctrl+u 快速转换为大写
inoremap <c-u> <esc>viwUea
nnoremap <c-u> viwUe
" 插入模式、正常模式按 Ctrl+u+u 快速转换为小写
inoremap <c-u><c-u> <esc>viwuea
nnoremap <c-u><c-u> viwue

"Ctrl+d 复制本行并粘贴到一下行
nnoremap <c-d> yyp

" <leader>+q 快速退出vim
nmap <leader>q :q!<cr>
nmap <leader>w :w!<cr>
imap <leader>q <Esc>:q!<cr>
imap <leader>w <Esc>:w!<cr>

"insert move
inoremap <C-f> <Right>
inoremap <C-b> <Left>
inoremap <C-a> <C-o>^
inoremap <C-e> <C-o>$

"复制模式进入和退出
nnoremap <leader><leader>v :set paste<cr>
inoremap <leader><leader>v <Esc>:set paste<cr>
"插入模式快速到另一个字符右边，对于配对的符号（如括号）很有用
imap <c-a> <Esc>LA
"插入模式移动到下一行
imap <c-o> <Esc>o
"移动到末尾
imap <c-e> <Esc>A
"关闭record
map q <nop>
"若打开分割窗口，可快速切换窗口
"快捷键提示：Ctrl+w w 切换窗口; Ctrl+w s 水平分割; Ctrl+w v 竖直分割
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

"buffer change
nnoremap <c-n> :bn<cr>
"nnoremap <c-p> :bp<cr>
nnoremap <leader>d :bd<cr>

"设置跳出自动补全的括号
func SkipBracker()
    if getline('.')[col('.') - 1] == ')' || getline('.')[col('.') - 1] == ']' || getline('.')[col('.') - 1] == '"' || getline('.')[col('.') - 1] == "'" || getline('.')[col('.') - 1] == '}'
        return "\<ESC>la"
    else
        return "\t"
    endif
endfunc
" 将tab键绑定为跳出括号
inoremap <leader><tab> <c-r>=SkipBracker()<CR>
"}}}

"设置特殊文件格式的语法高亮，格式之间使用逗号隔开
"例如 *.txt,*.conf
if has("autocmd")
       autocmd BufNewFile,Bufread *.conf,*.txt set syntax=vim
endif
